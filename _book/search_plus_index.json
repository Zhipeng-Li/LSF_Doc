{"./":{"url":"./","title":"前言","keywords":"","body":"LSF handbook 内容简介 主要内容是 IBM 官方 LSF manual 的文档翻译，具体内容涉及 LSF 的产品介绍、安装升级、用户操作、作业调度、集群运维、功能开发及拓展等。 其次结合译者的工作需求，会有一些相关知识点的增补，与实际操作经验的总结。大致包含 Linux 运行环境的配置、vim编辑器操作、性能调优、队列日志分析、EDA 作业优化、同类调度器（Slurm／PSB）的功能对比等等。 行文结构 依照 Part > Chapter > Section > Article的行文结构 Part I 入门介绍篇 chapter1 LSF 介绍 重点： lsf 快速入门章节 chapter2 安装、升级与迁移 Part II 基础操作篇 chapter3 用户操作基础 重点：作业生命周期 chapter4 管理员操作基础 重点：配置文件、日志排错 Part III 作业调度篇 chapter5 作业调度管理 重点：LSF daemons， bsub命令 Part IV 集群运维篇 chapter6 集群维护管理 chapter7 参考 Part V 功能拓展篇 chapter8 LSF 拓展 chapter9 最佳实践与建议 Part VI 经验总结篇 chapter10 Linux 操作进阶 重点：免密、脚本编程、vim编辑器等 chapter11 行业结合经验 重点：日志分析，高级调度策略等 chapter11 调度器对比 重点：slurm，PBS等 其它说明 版本 基于 版本为 LSF 10.1.0 的 LSF manual。 译作初衷 IBM 旗下的作业调度系统 LSF， 作为一款在 HPC 领域内应用广泛的商业调度器，其 manual 是针对多种商业客户而编写的，文档受众主要是各大中小型企业的集群管理者，其次则为数量更多的集群使用者，与少部分功能开发者。但实际上，因为每个企业/非企业级用户的软硬件基础架构，与业务场景会有不同，所以，作为集群的管理者，除了需要熟悉官网中介绍的功能操作外，也有必要结合实际的工作需求，基于所在行业，进行实际经验的总结与梳理等。 故而，本LSF 中文手册是从集群管理者的角度出发，基于 LSF manual，进行的一些翻译与增补，鉴于译者水平精力有限，出现错误纰漏之处在所难免，希望读者不吝批评指正。 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 15:46:08 "},"chapter1/LSF_introduction.html":{"url":"chapter1/LSF_introduction.html","title":"Chapter 1 LSF 介绍","keywords":"","body":"Chapter 1 LSF 介绍 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter1/section1/function.html":{"url":"chapter1/section1/function.html","title":"1.1 LSF 功能","keywords":"","body":"1.1 LSF 功能 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter1/section2/architect.html":{"url":"chapter1/section2/architect.html","title":"1.2 LSF 架构","keywords":"","body":"1.2 LSF 架构 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter1/section3/concept.html":{"url":"chapter1/section3/concept.html","title":"1.3 LSF 基础概念","keywords":"","body":"1.3 LSF 基础概念 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter1/section7/LSF_quick_reference.html":{"url":"chapter1/section7/LSF_quick_reference.html","title":"1.7 LSF 快速上手","keywords":"","body":"1.7 LSF 快速上手 本文主要是关于 LSF 命令、守护进程、配置文件、日志文件以及重要的集群配置参数的快速介绍。 Unix 及 Linux 系统下的安装目录示意图 守护进程的错误日志文件 守护进程的错误日志文件，存储在由 LSF_LOGDIR 变量定义的文件目录下面，该变量值在 lsf.conf 文件中指定。 LSF base system daemon log files LSF batch system daemon log files pim.log.host_name mbatchd.log.host_name res.log.host_name sbatchd.log.host_name lim.log.host_name mbschd.log.host_name 如果在 ego.conf 文件中定义了变量 EGO_LOGDIR ，那么 lim.log.host_name 文件则存储在由变量 EGO_LOGDIR 指定的文件目录中。 配置文件 lsf.conf, lsf.shared, 和 lsf.cluster.cluster_name 文件， 位于由 LSF_CONFDIR 变量定义的文件目录下面，该变量值在 lsf.conf 文件中指定。 lsb.params, lsb.queues, lsb.modules, 和 lsb.resources 文件，位于 LSB_CONFDIR/cluster_name/configdir/ 目录下面。 文件 描述 install.config LSF 的安装与配置选项 lsf.conf 描述集群配置和操作的通用环境配置文件 lsf.shared 所有群集共享的定义文件。用于定义群集名称、主机类型、主机型号和站点定义的资源 lsf.cluster.cluster_name 用于定义主机、管理员和站点定义的共享资源的位置的集群配置文件 lsb.applications 定义应用程序配置文件，来指定同类型作业的公共参数 lsb.params 配置 LSF 批处理参数 lsb.queues 批处理队列配置文件 lsb.resources 配置资源分配限制、导出和资源使用限制 lsb.serviceclasses 将LSF集群中的服务级别协议（SLA）定义为服务类，该服务类定义了 SLA 的属性 lsb.users 配置用户组、用户和用户组的分层公平共享，以及用户和用户组的作业槽数限制 lsf.conf 配置文件中的集群配置参数 参数 描述 Unix 默认值 LSF_BINDIR Directory containing LSF user commands, which are shared by all hosts of the same type LSF_TOP/version/OStype/bin LSF_CONFDIR Directory for all LSF configuration files LSF_TOP/conf LSF_ENVDIR Directory containing the lsf.conf file. Must be owned by root. /etc (if LSF_CONFDIR is not defined) LSF_INCLUDEDIR Directory containing LSF API header files lsf.h and lsbatch.h LSF_TOP/version/include LSF_LIBDIR LSF libraries, which are shared by all hosts of the same type LSF_TOP/version/OStype/lib LSF_LOGDIR (Optional) Directory for LSF daemon logs. Must be owned by root. /tmp LSF_LOG_MASK Logging level of error messages from LSF commands LOG_WARNING LSF_MANDIR Directory containing LSF man pages LSF_TOP/version/man LSF_MISC Sample C programs and shell scripts, and a template for an external LIM (elim) LSF_TOP/version/misc LSF_SERVERDIR Directory for all server binary files and shell scripts, and external executable files that are started by LSF daemons, must be owned by root, and shared by all hosts of the same type LSF_TOP/version/OStype/etc LSF_TOP Top-level installation directory. The path to LSF_TOP must be shared and accessible to all hosts in the cluster. It cannot be the root directory (/). Not definedRequired for installation LSB_CONFDIR Directory for LSF Batch configuration directories, containing user and host lists, operation parameters, and batch queues LSF_CONFDIR/lsbatch LSF_LIVE_CONFDIR Directory for LSF live reconfiguration directories that are written by the bconf command. LSB_SHAREDIR/cluster_name/live_confdir LSF_SHAREDIR Directory for LSF batch job history and accounting log files for each cluster, must be owned by primary LSF administrator LSF_TOP/work LSF_LIM_PORT TCP service port that is used for communication with the limdaemon 7879 LSF_RES_PORT TCP service port that is used for communication with the resdaemon 6878 LSF_MBD_PORT TCP service port that is used for communication with the mbatchd daemon 6881 LSF_SBD_PORT TCP service port that is used for communication with the sbatchd daemon 6882 管理命令 注：只有LSF管理员和root用户可以使用这些命令。 命令 描述 lsadmin LSF administrator tool to control the operation of the LIM and RES daemons in an LSF cluster, lsadmin helpshows all subcommands lsfinstall Install LSF with the install.config input file lsfrestart Restart the LSF daemons on all hosts in the local cluster lsfshutdown Shut down the LSF daemons on all hosts in the local cluster lsfstartup Start the LSF daemons on all hosts in the local cluster badmin LSF administrative tool to control the operation of the LSF batch system (sbatchd, mbatchd, hosts, and queues) badmin help shows all subcommands bconf Changes LSF configuration in active memory 守护进程 进程名 描述 lim Load Information Manager (LIM): collects load and resource information about all server hosts in the cluster and provides host selection services to applications through LSLIB. LIM maintains information on static system resources and dynamic load indexes mbatchd Master Batch Daemon (MBD): accepts and holds all batch jobs. MBD periodically checks load indexes on all server hosts by contacting the Master LIM. mbschd Master Batch Scheduler Daemon: performs the scheduling functions of LSF and sends job scheduling decisions to MBD for dispatch. Runs on the LSF master server host sbatchd Slave Batch Daemon (SBD): accepts job execution requests from MBD, and monitors the progress of jobs. Controls job execution, enforces batch policies, reports job status to MBD, and starts MBD. pim Process Information Manager (PIM): monitors resources that are used by submitted jobs while they are running. PIM is used to enforce resource limits and load thresholds, and for fairshare scheduling res Remote Execution Server (RES): accepts remote execution requests from all load-sharing applications and handles I/O on the remote host for load sharing processes. o 查看集群信息的命令 命令 描述 bhosts Displays hosts and their static and dynamic resources blimits Displays information about resource allocation limits of running jobs bparams Displays information about tunable batch system parameters bqueues Displays information about batch queues busers Displays information about users and user groups lshosts Displays hosts and their static resource information lsid Displays the current LSF version number, cluster name, and master host name lsinfo Displays load-sharing configuration information lsload Displays dynamic load indexes for hosts 监测作业与任务的命令 Command Description bacct Reports accounting statistics on completed LSF jobs bapp Displays information about jobs that are attached to application profiles bhist Displays historical information about jobs bjobs Displays information about jobs bpeek Displays stdout and stderr of unfinished jobs bsla Displays information about service class configuration for goal-oriented service-level agreement scheduling bstatus Reads or sets external job status messages and data files 提交与控制作业的命令 Command Description bbot Moves a pending job relative to the last job in the queue bchkpnt Checkpoints a checkpointable job bkill Sends a signal to a job bmig Migrates a checkpointable or rerunnable job bmod Modifies job submission options brequeue Kills and requeues a job bresize Releases slots and cancels pending job resize allocation requests brestart Restarts a checkpointed job bresume Resumes a suspended job bstop Suspends a job bsub Submits a job bswitch Moves unfinished jobs from one queue to another btop Moves a pending job relative to the first job in the queue bsub 命令 bsub [options] command[arguments] 命令中的部分选项 选项 描述 -ar Specifies the job is autoresizable -H Holds the job in the PSUSP state at submission **-I\\ -Ip\\ -Is** Submits a batch interactive job. -Ip creates a pseudo-terminal. -Is creates a pseudo-terminal in shell mode. -K Submits a job and waits for the job to finish -r Makes a job rerunnable -x Exclusive execution -app application_profile_name Submits the job to the specified application profile -b begin_time Dispatches the job on or after the specified date and time in the form [[month:]day:]:minute -C core_limit Sets a per-process (soft) core file size limit (KB) for all the processes that belong to this job -c cpu_time[/host_name \\ /host_model] Limits the total CPU time the job can use. CPU time is in the form [hour:]minutes -cwd \"current_working_directory\" Specifies the current working directory for the job -D data_limit Sets the per-process (soft) data segment size limit (KB) for each process that belongs to the job -E \"pre_exec_command [arguments]\" Runs the specified pre-exec command on the execution host before the job runs -Ep \"post_exec_command [arguments]\" Runs the specified post-exec command on the execution host after the job finishes -e error_file Appends the standard error output to a file -eo error_file Overwrites the standard error output of the job to the specified file -F file_limit Sets per-process (soft) file size limit (KB) for each process that belongs to the job -f \"local_file op[remote_file]\" ... Copies a file between the local (submission) host and remote (execution) host.op is one of >, -i input_file \\ -is input_file Gets the standard input for the job from specified file -J \"job_name[index_list]%job_slot_limit\" Assigns the specified name to the job. Job array index_list has the form start[-end[:step]], and %job_slot_limit is the maximum number of jobs that can run at the same time. -k \"chkpnt_dir [chkpnt_period][method=method_name]\" Makes a job checkpointable and specifies the checkpoint directory, period in minutes, and method -M mem_limit Sets the per-process (soft) memory limit (KB) -m \"host_name [@cluster_name][[!] \\ +[pref_level]] \\ host_group[[!] \\ +[pref_level]] \\ compute_unit[[!] \\ +[pref_level]]...\" Runs job on one of the specified hosts. Plus (+) after the names of a host or group indicates a preference. Optionally, a positive integer indicates a preference level. Higher numbers indicate a greater preference. -n min_proc[,max_proc] Specifies the minimum and maximum numbers of processors that are required for a parallel job -o output_file Appends the standard output to a file -oo output_file Overwrites the standard output of the job to the specified file -p process_limit Limit the number of processes for the whole job -q \"queue_name ...\" Submits job to one of the specified queues -R \"res_req\" [-R \"res_req\" ...] Specifies host resource requirements -S stack_limit Sets a per-process (soft) stack segment size limit (KB) for each process that belongs to the job -sla service_class_name Specifies the service class where the job is to run -T thread_limit Sets the limit of the number of concurrent threads for the whole job -t term_time Specifies the job termination deadline in the form [[month:]day:]hour:minute -v swap_limit Sets the total process virtual memory limit (KB) for the whole job -W run_time[/host_name \\ /host_model] Sets the runtime limit of the job in the form [hour:]minute -h Prints command usage to stderr and exits -V Prints LSF release version to stderr and exits © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 19:16:13 "},"chapter2/install_upgrade_and_migrate.html":{"url":"chapter2/install_upgrade_and_migrate.html","title":"Chapter 2 安装、升级与迁移","keywords":"","body":"Chapter 2 安装、升级与迁移 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/user_fundations.html":{"url":"chapter3/user_fundations.html","title":"Chapter 3 用户操作基础","keywords":"","body":"Chapter 3 用户操作基础 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section1/LSF_overview.html":{"url":"chapter3/section1/LSF_overview.html","title":"3.1 LSF 概览","keywords":"","body":"3.1 LSF 概览 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section1/cluster_components.html":{"url":"chapter3/section1/cluster_components.html","title":"集群组件","keywords":"","body":"集群组件 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section2/Inside_an_LSF_cluster.html":{"url":"chapter3/section2/Inside_an_LSF_cluster.html","title":"3.2 LSF 细观","keywords":"","body":"3.2 LSF 细观 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section2/LSF_daemons_and_processes.html":{"url":"chapter3/section2/LSF_daemons_and_processes.html","title":"LSF 服务与进程","keywords":"","body":"LSF 服务与进程 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section2/cluster_communication_paths.html":{"url":"chapter3/section2/cluster_communication_paths.html","title":"集群通信方式","keywords":"","body":"集群通信方式 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section2/falut_tolerance.html":{"url":"chapter3/section2/falut_tolerance.html","title":"容错","keywords":"","body":"容错 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section2/security.html":{"url":"chapter3/section2/security.html","title":"安全","keywords":"","body":"安全 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section3/inside_workload_management.html":{"url":"chapter3/section3/inside_workload_management.html","title":"3.3 作业负载管理","keywords":"","body":"3.3 作业负载管理 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section3/job_lifecycle.html":{"url":"chapter3/section3/job_lifecycle.html","title":"作业生命周期","keywords":"","body":"作业生命周期 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section3/job_submission.html":{"url":"chapter3/section3/job_submission.html","title":"作业提交","keywords":"","body":"作业提交 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section3/job_scheduling_and_dispatch.html":{"url":"chapter3/section3/job_scheduling_and_dispatch.html","title":"作业调度","keywords":"","body":"作业调度 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section3/host_selection.html":{"url":"chapter3/section3/host_selection.html","title":"节点选择","keywords":"","body":"节点选择 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section3/job_execution_environment.html":{"url":"chapter3/section3/job_execution_environment.html","title":"作业运行环境","keywords":"","body":"作业运行环境 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section4/LSF_with_EGO_enabled.html":{"url":"chapter3/section4/LSF_with_EGO_enabled.html","title":"3.4 启用 EGO 的 LSF","keywords":"","body":"3.4 启用 EGO 的 LSF © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section4/EGO_component_overview.html":{"url":"chapter3/section4/EGO_component_overview.html","title":"EGO 组件概览","keywords":"","body":"EGO 组件概览 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section4/resources.html":{"url":"chapter3/section4/resources.html","title":"资源","keywords":"","body":"资源 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter3/section4/LSF_resource_sharing.html":{"url":"chapter3/section4/LSF_resource_sharing.html","title":"LSF 资源共享","keywords":"","body":"LSF 资源共享 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/administrator_fundations.html":{"url":"chapter4/administrator_fundations.html","title":"Chapter 4 管理员操作基础","keywords":"","body":"Chapter 4 管理员操作基础 Get an administrator overview of IBM Spectrum LSF how to manage various types of workload and cluster operations. LSF cluster overview Get an overview of your cluster and the location of important LSF directories and configuration files.Work with LSF Start and stop LSF daemons, and reconfigure cluster properties. Check LSF status and submit LSF jobs.Troubleshooting LSF problems Troubleshoot common LSF problems and understand LSF error messages. If you cannot find a solution to your problem here, contact IBM Support. © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 19:19:18 "},"chapter4/section1/cluster_overview.html":{"url":"chapter4/section1/cluster_overview.html","title":"4.1 集群概览","keywords":"","body":"4.1 集群概览 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section1/terms_and_concepts.html":{"url":"chapter4/section1/terms_and_concepts.html","title":"术语与概念","keywords":"","body":"术语与概念 Before you use LSF for the first time, you should read the LSF Foundations Guide for a basic understanding of workload management and job submission, and the Administrator Foundations Guide for an overview of cluster management and operations. Parent topic: LSF cluster overview Job states IBM Spectrum LSF jobs have several states. PEND Waiting in a queue for scheduling and dispatch. RUN Dispatched to a host and running. DONE Finished normally with zero exit value. EXIT Finished with nonzero exit value. PSUSP Suspended while the job is pending. USUSP Suspended by user. SSUSP Suspended by the LSF system. POST_DONE Post-processing completed without errors. POST_ERR Post-processing completed with errors. UNKWN The mbatchd daemon lost contact with the sbatchd daemon on the host where the job runs. WAIT For jobs submitted to a chunk job queue, members of a chunk job that are waiting to run. ZOMBI A job becomes ZOMBI if the execution host is unreachable when a non-rerunnable job is killed or a rerunnable job is requeued. Host An LSF host is an individual computer in the cluster. Each host might have more than one processor. Multiprocessor hosts are used to run parallel jobs. A multiprocessor host with a single process queue is considered a single machine. A box full of processors that each have their own process queue is treated as a group of separate machines. Tip The names of your hosts should be unique. They cannot be the same as the cluster name or any queue that is defined for the cluster. Job An LSF job is a unit of work that runs in the LSF system. A job is a command that is submitted to LSF for execution, by using the bsub command. LSF schedules, controls, and tracks the job according to configured policies. Jobs can be complex problems, simulation scenarios, extensive calculations, anything that needs compute power. Job files When a job is submitted to a queue, LSF holds it in a job file until conditions are right for it run. Then, the job file is used to run the job. On UNIX, the job file is a Bourne shell script that is run at execution time. On Windows, the job file is a batch file that is processed at execution time. Interactive batch job An interactive batch job is a batch job that allows you to interact with the application and still take advantage of LSFscheduling policies and fault tolerance. All input and output are through the terminal that you used to type the job submission command. When you submit an interactive job, a message is displayed while the job is awaiting scheduling. A new job cannot be submitted until the interactive job is completed or terminated. Interactive task An interactive task is a command that is not submitted to a batch queue and scheduled by LSF, but is dispatched immediately. LSF locates the resources that are needed by the task and chooses the best host among the candidate hosts that has the required resources and is lightly loaded. Each command can be a single process, or it can be a group of cooperating processes. Tasks are run without using the batch processing features of LSF but still with the advantage of resource requirements and selection of the best host to run the task based on load. Local task A local task is an application or command that does not make sense to run remotely. For example, the ls command on UNIX. Remote task A remote task is an application or command that that can be run on another machine in the cluster. Host types and host models Hosts in LSF are characterized by host type and host model. The following example is a host with type X86_64, with host models Opteron240, Opteron840, Intel_EM64T, and so on. Host type An LSF host type is the combination of operating system and host CPU architecture. All computers that run the same operating system on the same computer architecture are of the same type. These hosts are binary-compatible with each other. Each host type usually requires a different set of LSF binary files. Host model An LSF host model is the host type of the computer, which determines the CPU speed scaling factor that is applied in load and placement calculations. The CPU factor is considered when jobs are being dispatched. Resources LSF resources are objects in the LSF system resources that LSF uses track job requirements and schedule jobs according to their availability on individual hosts. Resource usage The LSF system uses built-in and configured resources to track resource availability and usage. Jobs are scheduled according to the resources available on individual hosts. Jobs that are submitted through the LSF system will have the resources that they use monitored while they are running. This information is used to enforce resource limits and load thresholds as well as fairshare scheduling. LSF collects the following kinds of information: Total CPU time that is consumed by all processes in the job Total resident memory usage in KB of all currently running processes in a job Total virtual memory usage in KB of all currently running processes in a job Currently active process group ID in a job Currently active processes in a job On UNIX and Linux, job-level resource usage is collected through PIM. Load indices Load indices measure the availability of dynamic, non-shared resources on hosts in the cluster. Load indices that are built into the LIM are updated at fixed time intervals. External load indices Defined and configured by the LSF administrator and collected by an External Load Information Manager (ELIM) program. The ELIM also updates LIM when new values are received. Static resources Built-in resources that represent host information that does not change over time, such as the maximum RAM available to user processes or the number of processors in a machine. Most static resources are determined by the LIM at start-up time. Static resources can be used to select appropriate hosts for particular jobs that are based on binary architecture, relative CPU speed, and system configuration. Load thresholds Two types of load thresholds can be configured by your LSF administrator to schedule jobs in queues. Each load threshold specifies a load index value: The loadSched load threshold determines the load condition for dispatching pending jobs. If a host’s load is beyond any defined loadSched, a job cannot be started on the host. This threshold is also used as the condition for resuming suspended jobs. The loadStop load threshold determines when running jobs can be suspended. To schedule a job on a host, the load levels on that host must satisfy both the thresholds that are configured for that host and the thresholds for the queue from which the job is being dispatched. The value of a load index might either increase or decrease with load, depending on the meaning of the specific load index. Therefore, when you compare the host load conditions with the threshold values, you need to use either greater than (>) or less than ( Runtime resource usage limits Limit the use of resources while a job is running. Jobs that consume more than the specified amount of a resource are signaled. Hard and soft limits Resource limits that are specified at the queue level are hard limits while limits that are specified with job submission are soft limits. See the setrlimit man page for information about hard and soft limits. Resource allocation limits Restrict the amount of a resource that must be available during job scheduling for different classes of jobs to start, and which resource consumers the limits apply to. If all of the resource is consumed, no more jobs can be started until some of the resource is released. Resource requirements (bsub -R) The bsub -R option specifies resources requirements for the job. Resource requirements restrict which hosts the job can run on. Hosts that match the resource requirements are the candidate hosts. When LSF schedules a job, it collects the load index values of all the candidate hosts and compares them to the scheduling conditions. Jobs are only dispatched to a host if all load values are within the scheduling thresholds. © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 19:22:25 "},"chapter4/section1/cluster_characteristics.html":{"url":"chapter4/section1/cluster_characteristics.html","title":"集群特征","keywords":"","body":"集群特征 Find the name of your cluster after installation, cluster administrators, and where hosts are defined. Cluster name and administrators Your cluster is installed according to the installation options specified by the lsfinstall -f install.configcommand and the options you chose in the install.config file. The cluster name that you specified at installation is part of the name of the LSF_CONFDIR/lsf.cluster.cluster_name file. /usr/share/lsf/lsf_10/conf/lsf.cluster.lsf_10 Cluster administrators are listed in the ClusterAdmins section of the LSF_CONFDIR/lsf.cluster.cluster_namefile. LSF hosts Host types that are installed in your cluster are listed in the Hosts section of theLSF_CONFDIR/lsf.cluster.cluster_name file. The LSF master host is the first host that is configured in the Hosts section ofLSF_CONFDIR/lsf.cluster.cluster_name file. LSF server hosts that are defined in your cluster are indicated by 1 in the server column of the Hosts section in theLSF_CONFDIR/lsf.cluster.cluster_name file. LSF client-only hosts that are defined in your cluster are indicated by 0 in the server column of the Hosts section in theLSF_CONFDIR/lsf.cluster.cluster_name file. Parent topic: LSF cluster overview © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 19:23:28 "},"chapter4/section1/filesystems_directories_and_files.html":{"url":"chapter4/section1/filesystems_directories_and_files.html","title":"文件系统、目录和文件","keywords":"","body":"文件系统、目录和文件 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section1/important_directories_and_configuration_files.html":{"url":"chapter4/section1/important_directories_and_configuration_files.html","title":"重要的文件目录与配置文件","keywords":"","body":"重要的文件目录与配置文件 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section2/work_with_LSF.html":{"url":"chapter4/section2/work_with_LSF.html","title":"4.2 使用 LSF","keywords":"","body":"4.2 使用 LSF Start and stop LSF daemons, and reconfigure cluster properties. Check LSF status and submit LSF jobs. Start, stop, and reconfigure LSF Use LSF administration commands lsadmin and badmin to start and stop LSF daemons, and reconfigure cluster properties. Check LSF status Use LSF administration commands to check cluster configuration, see cluster status, and LSF batch workload system configuration and status. Run LSF jobs Use the bsub and lsrun commands to run jobs through LSF. Use the bjobs command to see the status of your jobs. Control job execution with the bstop, bresume, and bkill commands. Manage users, hosts, and queues Make your cluster available to users with cshrc.lsf and profile.lsf. Add or remove hosts and queues from your cluster. Configure LSF startup Use the lsf.sudoers file so that LSF administrators can start and stop LSF daemons. Set up LSF to start automatically. Manage software licenses and other shared resources Set up an LSF external LIM (ELIM) to monitor software licenses as dynamic shared resources. Parent topic: IBM Spectrum LSF administrator foundations © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 19:25:33 "},"chapter4/section2/start_stop_and_reconfigure_LSF.html":{"url":"chapter4/section2/start_stop_and_reconfigure_LSF.html","title":"开启、结束与重配置 LSF","keywords":"","body":"开启、结束与重配置 LSF Use LSF administration commands lsadmin and badmin to start and stop LSF daemons, and reconfigure cluster properties. Two LSF administration commands (lsadmin and badmin) ImportantOnly LSF administrators or root can run these commands. To start and stop , and to reconfigureLSFafter you change any configuration file, use the following commands: If you installed LSF as a non-root user By default, only root can start Multi-user configuration Only root can start LSF daemons. Any user can submit jobs to your cluster.For information about changing ownership and permissions for the lsadmin and badmincommands, seeTroubleshooting LSF problems.To permit LSF administrators to start and stop LSF daemons, set up the /etc/lsf.sudoers file, as described inConfigure LSF Startup. Single-user Your user account must be primary LSF administrator. You are able to start LSF daemons, but only your user account can submit jobs to the cluster. Your user account must be able to read the system kernel information, such as/dev/kmem. Setting up the LSF environment with cshrc.lsf and profile.lsf Before you use LSF, you must set up the LSF execution environment with the cshrc.lsf or profile.lsf file. Starting your cluster Use the lsadmin and badmin commands to start the LSF daemons. Stopping your cluster Use the lsadmin and badmin commands to stop the LSF daemons. Reconfiguring your cluster with lsadmin and badmin Use the lsadmin and badmin commands to reconfigure LSF after you change any configuration file. Parent topic: Work with LSF LSF Cluster Management and Operations © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 19:26:12 "},"chapter4/section2/check_LSF_status.html":{"url":"chapter4/section2/check_LSF_status.html","title":"检查 LSF 状态","keywords":"","body":"检查 LSF 状态 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section2/run_jobs.html":{"url":"chapter4/section2/run_jobs.html","title":"运行作业","keywords":"","body":"运行作业 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section2/manage_users_hosts_and_queues.html":{"url":"chapter4/section2/manage_users_hosts_and_queues.html","title":"管理用户、节点与队列","keywords":"","body":"管理用户、节点与队列 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section2/configure_LSF_startup.html":{"url":"chapter4/section2/configure_LSF_startup.html","title":"配置 LSF 启动","keywords":"","body":"配置 LSF 启动 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section2/manage_software_licenses_and_other_resources.html":{"url":"chapter4/section2/manage_software_licenses_and_other_resources.html","title":"管理软件许可证及其他共享资源","keywords":"","body":"管理软件许可证及其他共享资源 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section3/troubleshooting_LSF_problems.html":{"url":"chapter4/section3/troubleshooting_LSF_problems.html","title":"4.3 LSF 排错","keywords":"","body":"4.3 LSF 排错 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section3/solving_common_LSF_problems.html":{"url":"chapter4/section3/solving_common_LSF_problems.html","title":"常见 LSF 问题","keywords":"","body":"常见 LSF 问题 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter4/section3/LSF_error_messages.html":{"url":"chapter4/section3/LSF_error_messages.html","title":"LSF 错误信息","keywords":"","body":"LSF 错误信息 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/run_jobs.html":{"url":"chapter5/run_jobs.html","title":"Chapter 5 作业调度管理","keywords":"","body":"Chapter 5 作业调度管理 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/about_IBM_Spectrum_LSF.html":{"url":"chapter5/section1/about_IBM_Spectrum_LSF.html","title":"5.1 关于 IBM Spectrum LSF","keywords":"","body":"5.1 关于 IBM Spectrum LSF © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/LSF_clusters_jobs_and_queues.html":{"url":"chapter5/section1/LSF_clusters_jobs_and_queues.html","title":"LSF 集群，作业与队列","keywords":"","body":"LSF 集群，作业与队列 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/hosts.html":{"url":"chapter5/section1/hosts.html","title":"节点","keywords":"","body":"节点 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/LSF_daemons.html":{"url":"chapter5/section1/LSF_daemons.html","title":"LSF daemons","keywords":"","body":"LSF daemons © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/Batch_jobs_and_tasks.html":{"url":"chapter5/section1/Batch_jobs_and_tasks.html","title":"Batch jobs and tasks","keywords":"","body":"Batch jobs and tasks © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/Host_types_and_host_models.html":{"url":"chapter5/section1/Host_types_and_host_models.html","title":"Host types and host models","keywords":"","body":"Host types and host models © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/Users_and_administrators.html":{"url":"chapter5/section1/Users_and_administrators.html","title":"Users and administrators","keywords":"","body":"Users and administrators © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/Resources.html":{"url":"chapter5/section1/Resources.html","title":"Resources","keywords":"","body":"Resources © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section1/Job_lifecycle.html":{"url":"chapter5/section1/Job_lifecycle.html","title":"Job lifecycle","keywords":"","body":"Job lifecycle © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section2/working_with_jobs.html":{"url":"chapter5/section2/working_with_jobs.html","title":"5.2 作业运行","keywords":"","body":"5.2 作业运行 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section2/submitting_jobs_using_bsub.html":{"url":"chapter5/section2/submitting_jobs_using_bsub.html","title":"Submitting jobs (bsub)","keywords":"","body":"Submitting jobs (bsub) © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter5/section3/monitoring_jobs.html":{"url":"chapter5/section3/monitoring_jobs.html","title":"5.3 作业监控","keywords":"","body":"5.3 作业监控 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter6/Administer_LSF.html":{"url":"chapter6/Administer_LSF.html","title":"Chapter 6 LSF 集群维护管理","keywords":"","body":"Chapter 6 LSF 集群维护管理 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter7/Reference.html":{"url":"chapter7/Reference.html","title":"Chapter 7 参考文档","keywords":"","body":"Chapter 7 参考 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter8/Extend_LSF.html":{"url":"chapter8/Extend_LSF.html","title":" Chapter 8 LSF 拓展","keywords":"","body":"Chapter 8 LSF 拓展 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"chapter9/Best_practices_and_tips.html":{"url":"chapter9/Best_practices_and_tips.html","title":"Chapter 9 最佳实践与建议","keywords":"","body":"Chapter 9 经验与建议总结 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 13:09:38 "},"NOTE.html":{"url":"NOTE.html","title":"后记","keywords":"","body":"后记 进度记录 2020.7.2 开始，预计一个月左右完成初稿。 首先翻译 快速入门部分，然后是 管理员基本操作，作业管理，接着是管理员高级操作，最后是个人经验，以及部分开发拓展部分。视情况进行安装等章节的翻译。长期不定期更新关于行业经验的总结。 联系作者 作者技术博客：BYA's Blog 联系方式： ​ Wechat: 15656575965 （联系请备注：姓名－行业） ​ Tel：17626037549 © 2020 小白大侠 all right reserved，powered by Gitbook本文修订于： 2020-07-05 15:38:55 "}}